Classification := "CLASSIFY", "mainConcept" "String", "IS", "conceptList" "ConceptList"
ClassificationStatement := "classification" "Classification"
ConceptList := "head1" "String", "/\\", "tail1" "ConceptList"
             | "head1" "String"
ConsConceptList := "head1" "String", "/\\", "tail1" "ConceptList"
ConsSyntaxList := "head2" "SyntaxElement", ",", "tail2" "SyntaxList"
Declaration := "relation" "StringAndOrigin", "::", "concepts" "DeclarationType"
DeclarationStatement := "declaration" "Declaration"
DeclarationType := "fst" "String", "*", "snd" "String"
QuotedStringElement := "qstring" "QuotedString"
RelationElement := "relationName" "UnquotedString"
Statement := "classification" "Classification"
           | "declaration" "Declaration"
           | "syntax" "Syntax"
Syntax := "VIEW", "concept" "String", "=", "[", "syntaxList" "SyntaxList", "]"
SyntaxElement := "qstring" "QuotedString"
               | "relationName" "UnquotedString"
SyntaxList := "head2" "SyntaxElement", ",", "tail2" "SyntaxList"
            | "head2" "SyntaxElement"
SyntaxStatement := "syntax" "Syntax"

"conceptList" |- "conceptLists"
("conceptLists";"tail1") |- "conceptLists"
(("mainConcept"~;"conceptLists");"head1") |- "subConcepts"
("subConcepts";"subConcepts") |- "subConcepts"
(("mainConcept"~;"mainConcept") /\ =) |- "subConcepts"
(("concept"~;"concept") /\ =) |- "subConcepts"
"syntaxList" |- "syntaxLists"
("syntaxList";"tail2") |- "syntaxLists"
"qstring" |- =
"relationName" |- =
("string";"string"~) |- =
(("declaration";"relation");"string") |- "relationName"
(("declaration";"concepts");"snd") |- "nonTerminal"
(("subConcepts"~;"concept"~);"syntaxList") |- "choice"
"head2" |- "recogniser"
"tail2" |- "continuation"

asParser
parser
population
switches

asParser
parser
switches
Classification := "CLASSIFY", "mainConcept" "String", "IS", "conceptList" "ConceptList"
ClassificationStatement := "classification" "Classification"
ConceptList := "head1" "String", "/\\", "tail1" "ConceptList"
             | "head1" "String"
ConsConceptList := "head1" "String", "/\\", "tail1" "ConceptList"
ConsSyntaxList := "head2" "SyntaxElement", ",", "tail2" "SyntaxList"
Declaration := "relation" "StringAndOrigin", "::", "concepts" "DeclarationType"
DeclarationStatement := "declaration" "Declaration"
DeclarationType := "fst" "String", "*", "snd" "String"
QuotedStringElement := "qstring" "QuotedString"
RelationElement := "relationName" "UnquotedString"
Statement := "classification" "Classification"
           | "declaration" "Declaration"
           | "syntax" "Syntax"
Syntax := "VIEW", "concept" "String", "=", "[", "syntaxList" "SyntaxList", "]"
SyntaxElement := "qstring" "QuotedString"
               | "relationName" "UnquotedString"
SyntaxList := "head2" "SyntaxElement", ",", "tail2" "SyntaxList"
            | "head2" "SyntaxElement"
SyntaxStatement := "syntax" "Syntax"

